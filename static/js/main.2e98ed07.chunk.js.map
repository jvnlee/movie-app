{"version":3,"sources":["assets/noPoster.png","assets/imdb.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","Loader","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","role","length","substring","HomePresenter","nowPlaying","popular","upcoming","error","loading","Helmet","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","console","log","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","name","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Imdb","Logo","img","Overview","p","VideoContainer","Video","iframe","SimilarContainer","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","href","imdb_id","external_ids","src","alt","overview","videos","key","allow","similar","DetailContainer","pathname","location","includes","match","push","history","parsedId","Number","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","className","JunflixRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e98ed07.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPoster.280f255f.png\";","export default __webpack_public_path__ + \"static/media/imdb.51a0440f.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"bf13534062790846f9155127d826331b\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos,similar\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos,similar,external_ids\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 20px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => <Container>Loading...</Container>;\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  font-size: 20px;\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"assets/noPoster.png\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Junflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie info.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Show | Junflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nclass TVContainer extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV info.\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default TVContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 24px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  error,\n  loading,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <>\n    <Helmet>\n      <title>Search | Junflix</title>\n    </Helmet>\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Look for Movies or TV Shows...\"\n          value={searchTerm}\n          onChange={updateTerm}\n        />\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title={\"Movie Results\"}>\n              {movieResults.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  isMovie={true}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title={\"TV Show Results\"}>\n              {tvResults.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={show.poster_path}\n                  title={show.name}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n          {tvResults &&\n            movieResults &&\n            tvResults.length === 0 &&\n            movieResults.length === 0 && (\n              <Message text=\"Nothing found\" color=\"#95a5a6\" />\n            )}\n        </>\n      )}\n    </Container>\n  </>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nclass SearchContainer extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport Message from \"Components/Message\";\nimport Section from \"Components/Section\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(10px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 50px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span`\n  font-size: 14px;\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Imdb = styled.a``;\n\nconst Logo = styled.img`\n  position: relative;\n  top: 6px;\n  width: 40px;\n  height: auto;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n  margin-bottom: 20px;\n`;\n\nconst VideoContainer = styled.div`\n  width: 60%;\n  height: 500px;\n  margin-bottom: 40px;\n  font-size: 14px;\n`;\n\nconst Video = styled.iframe`\n  width: 100%;\n  height: 100%;\n`;\n\nconst SimilarContainer = styled.div`\n  width: 100%;\n  height: auto;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Junflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message text=\"Something went wrong...\" color=\"#ffffff\" />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Junflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"assets/noPoster.png\").default\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            <Divider>·</Divider>\n            <Imdb\n              href={\n                result.imdb_id\n                  ? `https://www.imdb.com/title/${result.imdb_id}`\n                  : `https://www.imdb.com/title/${result.external_ids.imdb_id}`\n              }\n            >\n              <Logo src={require(\"assets/imdb.png\").default} alt=\"imdb logo\" />\n            </Imdb>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <VideoContainer>\n            {result.videos.results.length > 0 ? (\n              <Video\n                src={`https://www.youtube.com/embed/${result.videos.results[0].key}`}\n                title=\"YouTube video player\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; fullscreen\"\n              ></Video>\n            ) : (\n              \"No trailers available\"\n            )}\n          </VideoContainer>\n          <SimilarContainer>\n            {result.similar.results &&\n            result.similar.results.length > 0 &&\n            result.original_title ? (\n              <Section title=\"Similar Movies\">\n                {result.similar.results.map((movie) => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    isMovie={true}\n                    year={\n                      movie.release_date && movie.release_date.substring(0, 4)\n                    }\n                  />\n                ))}\n              </Section>\n            ) : (\n              <Section title=\"Similar Shows\">\n                {result.similar.results.map((show) => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    imageUrl={show.poster_path}\n                    title={show.original_name}\n                    rating={show.vote_average}\n                    year={\n                      show.first_air_date && show.first_air_date.substring(0, 4)\n                    }\n                  />\n                ))}\n              </Section>\n            )}\n          </SimilarContainer>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nclass DetailContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      loading: true,\n      error: null,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = Number(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    const { result, loading, error } = this.state;\n    return <DetailPresenter result={result} loading={loading} error={error} />;\n  }\n}\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#ff7f00\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header className=\"nav\">\n    <List>\n      <Item current={pathname === \"/\" || pathname.includes(\"/movie/\")}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\" || pathname.includes(\"/show/\")}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"Components/Header\";\n\nconst JunflixRouter = () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n\nexport default JunflixRouter;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}